Counting Sort

#include<stdio.h>
void countingsort(int *arr,int size)
{
int output[10],max,i;
int count[100];
max=arr[0];
for(i=0;i<size;i++)
{
printf("%d\t",arr[i]);
}
for(i=1;i<size;i++)
{
if(arr[i]>max)
max=arr[i];
}
for(i=0;i<=max;i++)
{
count[i]=0;
}
for(i=0;i<size;i++)
{
count[arr[i]]++;
}
for(i=1;i<=max;i++)
{
count[i]+=count[i-1];
}
for(i=size-1;i>=0;i--)
{
output[count[arr[i]]-1]=arr[i];
count[arr[i]]--;
}
for(i=0;i<size;i++)
{
arr[i]=output[i];
}
}
void generate(int *a,int n)
{
int i;
for(i=0;i<n;i++)
a[i]=rand()%100;
}
void display(int *a,int n)
{
int i;
for(i=0;i<n;i++)
{
printf("%d\t",a[i]);
}
}
void main()
{
int a[20],i,j,n;
printf("\nHow many element\t");
scanf("%d",&n);
generate(a,n);
printf("\n Elements are\n");
countingsort(a,n);
printf("\nSorted elements are\n");
display(a,n);
}

Merge Sort File
#include<stdio.h>
typedef struct employee
{
char name[10];
int age;
}record;
record employee[100];
int readfile(record *a)
{
int i=0;
FILE*fp;
if((fp=fopen("emp.txt","r"))!=NULL)
{
while(!feof(fp))
{
fscanf(fp,"%d %s",&a[i].age,a[i].name);
i++;
}
}
return(i-1);
}
void writefile(record*a,int n)
{
int i=0;
FILE *fp;
if((fp=fopen("Sorted_employee.txt","w"))!=NULL)
{
for(i=0;i<n;i++)
fprintf(fp,"%d %s\n",a[i].age,a[i].name);
}
}
merge(record *a,int l,int m,int u)
{
record c[10];int i,j,k;
i=l;
j=m+1;
k=0;
while(i<=m && j<=u)
{
if(a[i].age<a[j].age)
{
c[k]=a[i];
k++;
i++;
}
else
{
c[k]=a[j];
k++;
j++;
}
}
while(i<=m)
{
c[k]=a[i];
i++;k++;
}
while(j<=u)
{
c[k]=a[j];
k++;
j++;
}
for(i=l,j=0;i<=u;i++,j++)
a[i]=c[j];
}
mergesort(record *a,int i,int j)
{
int k=0;
if(i<j)
{
k=(i+j)/2;
mergesort(a,i,k);
mergesort(a,k+1,j);
merge(a,i,k,j);
}
}
void main()
{
int n;
n=readfile(employee);
mergesort(employee,0,n-1);
writefile(employee,n);
}
